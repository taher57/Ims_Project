{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FileService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8080\";\n  }\n  getAll() {\n    return this.http.get(this.baseUrl + \"/product\");\n  }\n  getById(serialnumber) {\n    return this.http.get(this.baseUrl + \"/product/\" + serialnumber);\n  }\n  // deleteStudent(serialnumber) {\n  //   return this.http.delete(this.baseUrl + \"/students/\" + serialnumber);\n  // }\n  updateFile(file) {\n    return this.http.put(this.baseUrl + \"/update\", file);\n  }\n}\nFileService.ɵfac = function FileService_Factory(t) {\n  return new (t || FileService)(i0.ɵɵinject(i1.HttpClient));\n};\nFileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileService,\n  factory: FileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAG,uBAAuB;EACO;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAG,UAAU,CAAC;EACjD;EACAC,OAAO,CAACC,YAAqB;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAO,IAAI,CAACC,OAAO,GAAG,WAAW,GAAGE,YAAY,CAAC;EACvE;EACA;EACA;EACA;EACAC,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACL,OAAO,GAAG,SAAS,EAAEI,IAAI,CAAC;EACtD;;;mBAhBWT,WAAW;AAAA;;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["FileService","constructor","http","getAll","get","baseUrl","getById","serialnumber","updateFile","file","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\taher.m\\Desktop\\FrontEnd\\src\\app\\services\\file.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { File } from '../model/file';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  baseUrl = \"http://localhost:8080\";\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(this.baseUrl + \"/product\");\n  }\n  getById(serialnumber : string) : Observable<File> {\n    return this.http.get<File>(this.baseUrl + \"/product/\" + serialnumber);\n  }\n  // deleteStudent(serialnumber) {\n  //   return this.http.delete(this.baseUrl + \"/students/\" + serialnumber);\n  // }\n  updateFile(file: File) {\n    return this.http.put(this.baseUrl + \"/update\", file);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}